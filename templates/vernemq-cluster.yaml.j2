apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: vernemq
spec:
  serviceName: vernemq
  selector:
    matchLabels:
      app: vernemq
  replicas: {{ replicas }}
  template:
    metadata:
      labels:
        app: vernemq
    spec:
      containers:
      - name: vernemq
        image: erlio/docker-vernemq:{{ vernemq_version }}
        resources:
          limits:
            cpu: {{ resources_cpu_limits }}
            memory: {{ resources_memory_limits }}
          requests:
            cpu: {{ resources_cpu_requests }}
            memory: {{ resources_memory_requests }} 
        ports:
        - containerPort: 1883
          name: mqtt
        - containerPort: 4369
          name: epmd
        - containerPort: 44053
          name: vmq
        - containerPort: 9100
        - containerPort: 9101
        - containerPort: 9102
        - containerPort: 9103
        - containerPort: 9104
        - containerPort: 9105
        - containerPort: 9106
        - containerPort: 9107
        - containerPort: 9108
        - containerPort: 9109
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DOCKER_VERNEMQ_DISCOVERY_KUBERNETES
          value: "1"
        - name: DOCKER_VERNEMQ_ERLANG__DISTRIBUTION__PORT_RANGE__MINIMUM
          value: "9100"
        - name: DOCKER_VERNEMQ_ERLANG__DISTRIBUTION__PORT_RANGE__MAXIMUM
          value: "9109"
        - name: DOCKER_VERNEMQ_LISTENER__VMQ__CLUSTERING
          value: "0.0.0.0:44053"
        - name: DOCKER_VERNEMQ_VMQ_PASSWD__PASSWORD_FILE
          value: "/etc/vernemq-passwd/vmq.passwd"
        - name: DOCKER_VERNEMQ_PLUGINS__VMQ_DIVERSITY
          value: "{{ (use_postgresql_auth == true) | ternary('on', 'off') }}"
        - name: DOCKER_VERNEMQ_PLUGINS__VMQ_PASSWD
          value: "{{ (use_postgresql_auth == true) | ternary('off', 'on') }}"
        - name: DOCKER_VERNEMQ_PLUGINS__VMQ_ACL
          value: "{{ (use_postgresql_auth == true) | ternary('off', 'on') }}"
        - name: DOCKER_VERNEMQ_VMQ_DIVERSITY__AUTH_POSTGRES__ENABLED
          value: "{{ (use_postgresql_auth == true) | ternary('on', 'off') }}"

{% if use_postgresql_auth == true %}     
        - name: DOCKER_VERNEMQ_VMQ_DIVERSITY__POSTGRES__HOST
          value: "{{ postgres_host }}"
        - name: DOCKER_VERNEMQ_VMQ_DIVERSITY__POSTGRES__PORT
          value: "{{ postgres_port }}"
        - name: DOCKER_VERNEMQ_VMQ_DIVERSITY__POSTGRES__USER
          value: "{{ postgres_user }}"
        - name: DOCKER_VERNEMQ_VMQ_DIVERSITY__POSTGRES__PASSWORD
          value: "{{ postgres_password }}"
        - name: DOCKER_VERNEMQ_VMQ_DIVERSITY__POSTGRES__DATABASE
          value: "{{ postgres_database }}"
{% endif %}

{% if use_postgresql_auth == false %}
        volumeMounts:
        - mountPath: /etc/vernemq-passwd
          name: vernemq-passwd
          readOnly: true
      volumes:
      - name: vernemq-passwd
        secret:
          secretName: vernemq-passwd
{% endif %}          
---
apiVersion: v1
kind: Service
metadata:
  name: vernemq
  labels:
    app: vernemq
spec:
  clusterIP: None
  selector:
    app: vernemq
  ports:
  - port: 4369
    name: empd
{#    
---
apiVersion: v1
kind: Service
metadata:
  name: mqtt
  labels:
    app: mqtt
spec:
  type: ClusterIP
  selector:
    app: vernemq
  ports:
  - port: 1883
    name: mqtt 
#}
---
apiVersion: v1
kind: Service
metadata:
  name: mqtts
  namespace: {{ cluster_namespace }}
  labels:
    app: mqtt
  annotations:  
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "{{ acm_ssl_cert }}"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: mqtt
spec:
  type: LoadBalancer
  selector:
    app: vernemq
  ports:
  - name: mqtt
    port: 1883
    protocol: TCP
    targetPort: 1883